df_resultados <- data.frame(resultados_total)
# Mostrar resultados
print(df_resultados)
# Guardar resultados en un archivo CSV
write.csv(df_resultados, "resultados_fotos.csv")
# Definir el directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/")
# Librerías
library(tidyverse)
# Función para obtener información de fotos
obtener_info_fotos <- function(carpeta) {
# Filtrar carpetas con formato YYYY-MM-DD C
carpetas_fecha <- list.files(carpeta, pattern = "^\\d{4}-\\d{2}-\\d{2} [a-z]$")
# Lista para almacenar resultados
resultados <- list()
for (carpeta_fecha in carpetas_fecha) {
# Extraer fecha
fecha <- str_replace(carpeta_fecha, " [a-z]$", "")
# Contar fotos en altaRes y pano
n_fotos_altares <- length(list.files(file.path(carpeta, carpeta_fecha, "altaRes")))
n_fotos_pano <- length(list.files(file.path(carpeta, carpeta_fecha, "pano")))
# Total de archivos
total_archivos <- n_fotos_altares + n_fotos_pano
# Agregar información a la lista
resultados[[length(resultados) + 1]] <- list(fecha = fecha,
n_fotos_altares = n_fotos_altares,
n_fotos_pano = n_fotos_pano,
total_archivos = total_archivos)
}
return(resultados)
}
# Directorio con las carpetas de fotos
directorio <- "/home/yoviajo/OneDrive/resp/gamsc-sms_f/"
# Obtener información de las fotos
resultados <- obtener_info_fotos(directorio)
# Seleccionar columnas
df_final <- select(data.frame(resultados), fecha, total_archivos)
# Guardar como CSV
write.csv(df_final, "info_fotos.csv", row.names = FALSE)
# Imprimir resultados
print(df_final)
# Definir el directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/")
# Librerías
library(tidyverse)
# Función para obtener información de fotos
obtener_info_fotos <- function(carpeta) {
# Filtrar carpetas con formato YYYY-MM-DD C
carpetas_fecha <- list.files(carpeta, pattern = "^\\d{4}-\\d{2}-\\d{2} [a-z]$")
# Lista para almacenar resultados
resultados <- list()
for (carpeta_fecha in carpetas_fecha) {
# Extraer fecha
fecha <- str_replace(carpeta_fecha, " [a-z]$", "")
# Contar fotos en altaRes y pano
n_fotos_altares <- length(list.files(file.path(carpeta, carpeta_fecha, "altaRes")))
n_fotos_pano <- length(list.files(file.path(carpeta, carpeta_fecha, "pano")))
# Total de archivos
total_archivos <- n_fotos_altares + n_fotos_pano
# Agregar información a la lista
resultados[[length(resultados) + 1]] <- list(fecha = fecha,
n_fotos_altares = n_fotos_altares,
n_fotos_pano = n_fotos_pano,
total_archivos = total_archivos)
}
return(resultados)
}
# Directorios con las carpetas de fotos
directorios <- c("/home/yoviajo/OneDrive/resp/gamsc-sms_f/",
"/home/yoviajo/OneDrive/resp/gamsc-sms_f/z2023/")
# Lista para almacenar resultados
resultados_totales <- list()
# Recorrer las carpetas
for (directorio in directorios) {
# Obtener información de las fotos
resultados <- obtener_info_fotos(directorio)
# Agregar resultados a la lista total
resultados_totales <- rbindlist(resultados_totales, resultados)
}
# Seleccionar columnas
df_final <- select(data.frame(resultados_totales), fecha, total_archivos)
# Guardar como CSV
write.csv(df_final, "info_fotos.csv", row.names = FALSE)
# Imprimir resultados
print(df_final)
# Definir el directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/")
# Librerías
library(tidyverse)
library(plyr)
# Función para obtener información de fotos
obtener_info_fotos <- function(carpeta) {
# Filtrar carpetas con formato YYYY-MM-DD C
carpetas_fecha <- list.files(carpeta, pattern = "^\\d{4}-\\d{2}-\\d{2} [a-z]$")
# Lista para almacenar resultados
resultados <- list()
for (carpeta_fecha in carpetas_fecha) {
# Extraer fecha
fecha <- str_replace(carpeta_fecha, " [a-z]$", "")
# Contar fotos en altaRes y pano
n_fotos_altares <- length(list.files(file.path(carpeta, carpeta_fecha, "altaRes")))
n_fotos_pano <- length(list.files(file.path(carpeta, carpeta_fecha, "pano")))
# Total de archivos
total_archivos <- n_fotos_altares + n_fotos_pano
# Agregar información a la lista
resultados[[length(resultados) + 1]] <- list(fecha = fecha,
n_fotos_altares = n_fotos_altares,
n_fotos_pano = n_fotos_pano,
total_archivos = total_archivos)
}
return(resultados)
}
# Directorios con las carpetas de fotos
directorios <- c("/home/yoviajo/OneDrive/resp/gamsc-sms_f/",
"/home/yoviajo/OneDrive/resp/gamsc-sms_f/z2023/")
# Lista para almacenar resultados
resultados_totales <- list()
# Recorrer las carpetas
for (directorio in directorios) {
# Obtener información de las fotos
resultados <- obtener_info_fotos(directorio)
# Agregar resultados a la lista total
resultados_totales <- rbindlist(resultados_totales, resultados)
}
# Seleccionar columnas
df_final <- select(data.frame(resultados_totales), fecha, total_archivos)
# Definir el directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/")
# Librerías
library(tidyverse)
# Función para obtener información de fotos
obtener_info_fotos <- function(carpeta) {
# Filtrar carpetas con formato YYYY-MM-DD C
carpetas_fecha <- list.files(carpeta, pattern = "^\\d{4}-\\d{2}-\\d{2} [a-z]$")
# Lista para almacenar resultados
resultados <- list()
for (carpeta_fecha in carpetas_fecha) {
# Extraer fecha
fecha <- str_replace(carpeta_fecha, " [a-z]$", "")
# Contar fotos en altaRes y pano
n_fotos_altares <- length(list.files(file.path(carpeta, carpeta_fecha, "altaRes")))
n_fotos_pano <- length(list.files(file.path(carpeta, carpeta_fecha, "pano")))
# Total de archivos
total_archivos <- n_fotos_altares + n_fotos_pano
# Agregar información a la lista
resultados[[length(resultados) + 1]] <- list(fecha = fecha,
n_fotos_altares = n_fotos_altares,
n_fotos_pano = n_fotos_pano,
total_archivos = total_archivos)
}
return(resultados)
}
# Función para combinar listas
combinar_listas <- function(...) do.call(cbind, lapply(..., as.list))
# Directorios con las carpetas de fotos
directorios <- c("/home/yoviajo/OneDrive/resp/gamsc-sms_f/",
"/home/yoviajo/OneDrive/resp/gamsc-sms_f/z2023/")
# Lista para almacenar resultados
resultados_totales <- list()
# Recorrer las carpetas
for (directorio in directorios) {
# Obtener información de las fotos
resultados <- obtener_info_fotos(directorio)
# Agregar resultados a la lista total
resultados_totales <- combinar_listas(resultados_totales, resultados)
}
# Definir el directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/")
# Librerías
library(tidyverse)
# Función para obtener información de fotos
obtener_info_fotos <- function(carpeta) {
# Filtrar carpetas con formato YYYY-MM-DD C
carpetas_fecha <- list.files(carpeta, pattern = "^\\d{4}-\\d{2}-\\d{2} [a-z]$")
# Lista para almacenar resultados
resultados <- list()
for (carpeta_fecha in carpetas_fecha) {
# Extraer fecha
fecha <- str_replace(carpeta_fecha, " [a-z]$", "")
# Contar fotos en altaRes y pano
n_fotos_altares <- length(list.files(file.path(carpeta, carpeta_fecha, "altaRes")))
n_fotos_pano <- length(list.files(file.path(carpeta, carpeta_fecha, "pano")))
# Total de archivos
total_archivos <- n_fotos_altares + n_fotos_pano
# Agregar información a la lista
resultados[[length(resultados) + 1]] <- list(fecha = fecha,
n_fotos_altares = n_fotos_altares,
n_fotos_pano = n_fotos_pano,
total_archivos = total_archivos)
}
# Exportar la variable "resultados"
assign("resultados", resultados, envir = .GlobalEnv)
return(resultados)
}
# Función para combinar listas
combinar_listas <- function(...) do.call(cbind, lapply(..., as.list))
# Directorios con las carpetas de fotos
directorios <- c("/home/yoviajo/OneDrive/resp/gamsc-sms_f/",
"/home/yoviajo/OneDrive/resp/gamsc-sms_f/z2023/")
# Lista para almacenar resultados
resultados_totales <- list()
# Recorrer las carpetas
for (directorio in directorios) {
# Obtener información de las fotos
resultados <- obtener_info_fotos(directorio)
# Agregar resultados a la lista total
resultados_totales <- combinar_listas(resultados_totales, resultados)
}
# Seleccionar columnas
df_final <- select(data.frame(resultados_totales), fecha, total_archivos)
# Guardar como CSV
write.csv(df_final, "info_fotos.csv", row.names = FALSE)
# Imprimir resultados
print(df_final)
rm(list = ls()) # Elimina todas las variables del entorno global
# Definir el directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/")
# Librerías
library(tidyverse)
# Función para obtener información de fotos
obtener_info_fotos <- function(carpeta) {
# Filtrar carpetas con formato YYYY-MM-DD C
carpetas_fecha <- list.files(carpeta, pattern = "^\\d{4}-\\d{2}-\\d{2} [a-z]$")
# Lista para almacenar resultados
resultados <- list()
for (carpeta_fecha in carpetas_fecha) {
# Extraer fecha
fecha <- str_replace(carpeta_fecha, " [a-z]$", "")
# Contar fotos en altaRes y pano
n_fotos_altares <- length(list.files(file.path(carpeta, carpeta_fecha, "altaRes")))
n_fotos_pano <- length(list.files(file.path(carpeta, carpeta_fecha, "pano")))
# Total de archivos
total_archivos <- n_fotos_altares + n_fotos_pano
# Agregar información a la lista
resultados[[length(resultados) + 1]] <- list(fecha = fecha,
n_fotos_altares = n_fotos_altares,
n_fotos_pano = n_fotos_pano,
total_archivos = total_archivos)
}
# Exportar la variable "resultados"
assign("resultados", resultados, envir = .GlobalEnv)
return(resultados)
}
# Función para combinar listas
combinar_listas <- function(...) do.call(cbind, lapply(..., as.list))
# Directorios con las carpetas de fotos
directorios <- c("/home/yoviajo/OneDrive/resp/gamsc-sms_f/",
"/home/yoviajo/OneDrive/resp/gamsc-sms_f/z2023/")
# Lista para almacenar resultados
resultados_totales <- list()
# Recorrer las carpetas
for (directorio in directorios) {
# Obtener información de las fotos
resultados <- obtener_info_fotos(directorio)
# Agregar resultados a la lista total
resultados_totales <- combinar_listas(resultados_totales, resultados)
}
rm(list = ls()) # Elimina todas las variables del entorno global
# Definir el directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/")
# Librerías
library(tidyverse)
library(purrr)
# Función para obtener información de fotos
obtener_info_fotos <- function(carpeta) {
# Filtrar carpetas con formato YYYY-MM-DD C
carpetas_fecha <- list.files(carpeta, pattern = "^\\d{4}-\\d{2}-\\d{2} [a-z]$")
# Lista para almacenar resultados
resultados <- list()
for (carpeta_fecha in carpetas_fecha) {
# Extraer fecha
fecha <- str_replace(carpeta_fecha, " [a-z]$", "")
# Contar fotos en altaRes y pano
n_fotos_altares <- length(list.files(file.path(carpeta, carpeta_fecha, "altaRes")))
n_fotos_pano <- length(list.files(file.path(carpeta, carpeta_fecha, "pano")))
# Total de archivos
total_archivos <- n_fotos_altares + n_fotos_pano
# Agregar información a la lista
resultados[[length(resultados) + 1]] <- list(fecha = fecha,
n_fotos_altares = n_fotos_altares,
n_fotos_pano = n_fotos_pano,
total_archivos = total_archivos)
}
return(resultados)
}
# Directorios con las carpetas de fotos
directorios <- c("/home/yoviajo/OneDrive/resp/gamsc-sms_f/",
"/home/yoviajo/OneDrive/resp/gamsc-sms_f/z2023/")
# Obtener información de las fotos
resultados_totales <- purrr::map_dfr(directorios, obtener_info_fotos)
# Seleccionar columnas
df_final <- select(resultados_totales, fecha, total_archivos)
# Guardar como CSV
write.csv(df_final, "info_fotos.csv", row.names = FALSE)
# Imprimir resultados
print(df_final)
rm(list = ls()) # Elimina todas las variables del entorno global
# Definir el directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/")
# Librerías
library(tidyverse)
library(purrr)
# Función para obtener información de fotos
obtener_info_fotos <- function(carpeta) {
# Filtrar carpetas con formato YYYY-MM-DD C
carpetas_fecha <- list.files(carpeta, pattern = "^\\d{4}-\\d{2}-\\d{2} [a-z]$")
# Lista para almacenar resultados
resultados <- list()
for (carpeta_fecha in carpetas_fecha) {
# Extraer fecha
fecha <- str_replace(carpeta_fecha, " [a-z]$", "")
# Contar fotos en altaRes y pano
n_fotos_altares <- length(list.files(file.path(carpeta, carpeta_fecha, "altaRes")))
n_fotos_pano <- length(list.files(file.path(carpeta, carpeta_fecha, "pano")))
# Total de archivos
total_archivos <- n_fotos_altares + n_fotos_pano
# Agregar información a la lista
resultados[[length(resultados) + 1]] <- list(fecha = fecha,
n_fotos_altares = n_fotos_altares,
n_fotos_pano = n_fotos_pano,
total_archivos = total_archivos)
}
return(resultados)
}
# Directorios con las carpetas de fotos
directorios <- c("/home/yoviajo/OneDrive/resp/gamsc-sms_f/",
"/home/yoviajo/OneDrive/resp/gamsc-sms_f/z2023/")
# Obtener información de las fotos
resultados_totales <- purrr::map_dfr(directorios, obtener_info_fotos)
# Ordenar por fecha ascendente
resultados_totales <- resultados_totales %>%
arrange(fecha)
# Seleccionar columnas
df_final <- select(resultados_totales, fecha, total_archivos)
# Guardar como CSV
write.csv(df_final, "info_fotos.csv", row.names = FALSE)
# Imprimir resultados
print(df_final)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
rm(list = ls()) # Elimina todas las variables del entorno global
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
View(datos)
# Crear gráfico de barras vertical
ggplot(datos, aes_string(x = "fecha", y = "total_archivos")) +
geom_bar(stat = "identity") +
labs(title = "Total de archivos por fecha",
x = "Fecha",
y = "Total de archivos")
# Mostrar el gráfico
ggsave("grafico_barras_total_archivos.pdf")
rm(list = ls()) # Elimina todas las variables del entorno global
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes_string(x = "fecha", y = "total_archivos")) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = date_breaks("3 months"),
labels = date_format("%Y-%b"))
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes_string(x = "fecha", y = "total_archivos")) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = date_breaks("3 months"),
labels = date_format("%Y-%b"))
install.packages("lubridate")
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes_string(x = "fecha", y = "total_archivos")) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = date_breaks("3 months"),
labels = date_format("%Y-%b"))
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
library(ggplot2)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes_string(x = "fecha", y = "total_archivos")) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = date_breaks("3 months"),
labels = date_format("%Y-%b"))
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
library(ggplot2)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes_string(x = "fecha", y = "total_archivos")) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = date_breaks("3 months"),
labels = date_format("%Y-%b"))
packageVersion("lubridate")
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
library(ggplot2)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes_string(x = "fecha", y = "total_archivos")) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = date_breaks("3 months"),
labels = date_format("%Y-%b"))
install.packages("lubridate")
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
library(ggplot2)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes_string(x = "fecha", y = "total_archivos")) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = date_breaks("3 months"),
labels = date_format("%Y-%b"))
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
library(ggplot2)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes(x = fecha, y = total_archivos)) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = "3 months", labels = date_format("%Y-%b"))
rm(list = ls()) # Elimina todas las variables del entorno global
library(lubridate)
library(ggplot2)
# Directorio de trabajo
setwd("/home/yoviajo/Descargas/f/lab/prof/3_analisis/")
# Cargar datos
datos <- read.csv("info_fotos.csv")
# Convertir fecha a formato Date
datos$fecha <- as.Date(datos$fecha, "%Y-%m-%d")
# Crear gráfico de barras vertical
ggplot(datos, aes(x = fecha, y = total_archivos)) +
geom_bar(stat = "identity") +
labs(title = "Total de imágenes por fecha",
x = "Fecha",
y = "Total de imágenes") +
scale_x_date(breaks = "3 months", labels = scales::date_format("%Y-%b"))
# Mostrar el gráfico
ggsave("grafico_barras_total_imagenes.pdf")
